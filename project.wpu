#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.err-values = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True},
                            loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BeCfPquEZeqQ6pfJCERhTaNA7C'\
        'a3fCTw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.36721504112808456,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (1,
         0),
        (6,)],
                                 'selected-nodes': [(1,
        7)],
                                 'top-node': (1,
        0,
        10)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.45679012345679015,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'png',
                                       'fReverse': False,
                                       'fSearchText': u'get_iou',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(1,),
        (2,),
        (2,
         0),
        (3,),
        (3,
         1),
        (3,
         1,
         1),
        (4,),
        (6,)],
                                      'selected-nodes': [(3,
        1)],
                                      'top-node': (2,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 2006L,
                       'folded-linenos': [],
                       'history': {None: [],
                                   u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['g'\
        'enerator.next()\n',
        'generator\n',
        'generator.__\n',
        'image, boxes = next(iter(generator))\n',
        'self.root_dir\n',
        'self.annotations\n',
        'self.annotations.iloc[idx]\n',
        'self.annotations.iloc[idx,1]\n',
        'img_name = os.path.join(self.root_dir,self.annotations.iloc[idx, "i'\
        'mage_path"])\n',
        'img_name = os.path.join(self.root_dir,self.annotations.iloc[idx, "i'\
        'mage_path"])',
        'self.annotations.iloc[0]\n',
        'self.annotations.iloc[0] == self.annotations.loc[0]\n',
        'self.annotations.iloc[0] == self.annotations.loc[1]\n',
        'img_name = os.path.join(self.root_dir,self.annotations.loc[idx, "im'\
        'age_path"])\n',
        'img_name\n',
        'image = io.imread(img_name)\n',
        'box = self.annotations.loc[idx, ["xmin","ymin","xmax","ymax"]].valu'\
        'es\n',
        'box.astype(float)\n',
        'box = self.annotations.loc[idx, ["xmin","ymin","xmax","ymax"]].valu'\
        'es.astype(float)\n',
        'box.reshape(-1)\n',
        'batch = next(iter(generator))\n',
        'batch\n',
        'batch["iamge"]\n',
        'batch["image"]\n',
        'trs\n',
        'image.max\n',
        'image.max()\n',
        'assert image.max() <= 1\n',
        'assert image.min() => 0\n',
        'assert image.min() >= 0\n',
        'box\n',
        'model\n',
        'config\n',
        'self.transform\n',
        'image = self.transform(image)\n',
        'image\n',
        'type(images[0])\n',
        'image, targets = next(iter(generator))\n',
        'type(image)\n',
        'image.to\n',
        'train\n',
        'type(targets[0]["boxes"])\n',
        'targets[0].shape\n',
        'targets[0]["boxes"]\n',
        'targets[0]["boxes"].shape\n',
        'targets["boxes"] = image_annotations[["xmin", "ymin", "xmax",\n    '\
        '                       "ymax"]].values.astype(float)\n\n',
        'image, targets = self.transform(image, targets)\n',
        'targets = {}\ntargets["boxes"] = image_annotations[["xmin", "ymin",'\
        ' "xmax",\n                           "ymax"]].values.astype(float)'\
        '\nif self.transform:\n    image, targets = self.transform(image, ta'\
        'rgets)\n\n',
        'targets.shape\n',
        'targets\n',
        'targets[0]\n',
        'targets["boxes"]\n',
        'targets["boxes"].shape\n',
        'image.shape\n',
        'idx\n',
        'self.annotations.shape\n',
        'self.annotations.index\n',
        'self.annotations.index.values\n',
        'self.weight\n',
        'input.shape\n',
        'input\n',
        'input[0]\n',
        'input[0][0]\n',
        'input[0][0].shape\n',
        'images.tensors\n',
        'images\n',
        'images[0]\n',
        'images.shape\n',
        'len(images)\n',
        'images[0].shape\n']},
                       'launch-id': None,
                       'sel-line': 2023L,
                       'sel-line-start': 83847L,
                       'selection_end': 83847L,
                       'selection_start': 83847L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['from deepforest import main\n',
        'm =main.deepforest()\n',
        'm\n',
        'import numpy as np\n',
        'np.array(o)\n',
        'np.array(0)\n']},
                       'launch-id': None,
                       'sel-line': 15L,
                       'sel-line-start': 474L,
                       'selection_end': 474L,
                       'selection_start': 474L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('deepforest/training.py'),
        {'attrib-starts': [('train_one_epoch|0|',
                            8)],
         'code-line': '    for images, targets in metric_logger.log_every(da'\
                      'ta_loader, print_freq, header):\n',
         'first-line': 16L,
         'folded-linenos': [],
         'sel-line': 21L,
         'sel-line-start': 722L,
         'selection_end': 722L,
         'selection_start': 722L,
         'zoom': 0L},
        1609978814.827139],
        [loc('deepforest/training.py'),
         {'attrib-starts': [('train_one_epoch|0|',
                             8)],
          'code-line': '        if not math.isfinite(loss_value):\n',
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 1283L,
          'selection_end': 1324L,
          'selection_start': 1324L,
          'zoom': 0L},
         1609978843.492711],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/conv.py'),
         {'attrib-starts': [('Conv2d|0|',
                             261),
                            ('Conv2d|0|.forward|0|',
                             421)],
          'code-line': '        return self._conv_forward(input, self.weight'\
                       ')\n',
          'first-line': 409L,
          'folded-linenos': [],
          'sel-line': 422L,
          'sel-line-start': 18285L,
          'selection_end': 18285L,
          'selection_start': 18285L,
          'zoom': 0L},
         1609978878.802924],
        [loc('tests/test_dataset.py'),
         {'attrib-starts': [('test_TreeDataset_transform|0|',
                             24)],
          'code-line': '        assert targets["labels"].shape == (1,79)\n',
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 1190L,
          'selection_end': 1237L,
          'selection_start': 1237L,
          'zoom': 0L},
         1609978878.811456],
        [loc('tests/test_dataset.py'),
         {'attrib-starts': [('test_TreeDataset_transform|0|',
                             24)],
          'code-line': '        assert targets["labels"].shape == (79,)\n',
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 1188L,
          'selection_end': 1234L,
          'selection_start': 1234L,
          'zoom': 0L},
         1609978969.473583],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/conv.py'),
         {'attrib-starts': [('Conv2d|0|',
                             261),
                            ('Conv2d|0|.forward|0|',
                             421)],
          'code-line': '        return self._conv_forward(input, self.weight'\
                       ')\n',
          'first-line': 402L,
          'folded-linenos': [],
          'sel-line': 422L,
          'sel-line-start': 18285L,
          'selection_end': 18285L,
          'selection_start': 18285L,
          'zoom': 0L},
         1609979009.351312],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module|0|',
                             177),
                            ('Module|0|._call_impl|0|',
                             714)],
          'code-line': '            result = self.forward(*input, **kwargs)'\
                       '\n',
          'first-line': 705L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 29761L,
          'selection_end': 29761L,
          'selection_start': 29761L,
          'zoom': 0L},
         1609979011.227756],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/conv.py'),
         {'attrib-starts': [('Conv2d|0|',
                             261),
                            ('Conv2d|0|.forward|0|',
                             421)],
          'code-line': '        return self._conv_forward(input, self.weight'\
                       ')\n',
          'first-line': 385L,
          'folded-linenos': [],
          'sel-line': 422L,
          'sel-line-start': 18285L,
          'selection_end': 18285L,
          'selection_start': 18285L,
          'zoom': 0L},
         1609979017.06966],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module|0|',
                             177),
                            ('Module|0|._call_impl|0|',
                             714)],
          'code-line': '            result = self.forward(*input, **kwargs)'\
                       '\n',
          'first-line': 713L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 29761L,
          'selection_end': 29761L,
          'selection_start': 29761L,
          'zoom': 0L},
         1609979019.111065],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/_utils.py'),
         {'attrib-starts': [('IntermediateLayerGetter|0|',
                             7),
                            ('IntermediateLayerGetter|0|.forward|0|',
                             59)],
          'code-line': '            x = module(x)\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2430L,
          'selection_end': 2430L,
          'selection_start': 2430L,
          'zoom': 0L},
         1609979019.667229],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module|0|',
                             177),
                            ('Module|0|._call_impl|0|',
                             714)],
          'code-line': '            result = self.forward(*input, **kwargs)'\
                       '\n',
          'first-line': 713L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 29761L,
          'selection_end': 29761L,
          'selection_start': 29761L,
          'zoom': 0L},
         1609979020.836836],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/backbone_utils.py'),
         {'attrib-starts': [('BackboneWithFPN|0|',
                             9),
                            ('BackboneWithFPN|0|.forward|0|',
                             41)],
          'code-line': '        x = self.body(x)\n',
          'first-line': 21L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1754L,
          'selection_end': 1754L,
          'selection_start': 1754L,
          'zoom': 0L},
         1609979021.602525],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module|0|',
                             177),
                            ('Module|0|._call_impl|0|',
                             714)],
          'code-line': '            result = self.forward(*input, **kwargs)'\
                       '\n',
          'first-line': 713L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 29761L,
          'selection_end': 29761L,
          'selection_start': 29761L,
          'zoom': 0L},
         1609979022.617107],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'),
         {'attrib-starts': [('RetinaNet|0|',
                             243),
                            ('RetinaNet|0|.forward|0|',
                             483)],
          'code-line': '        features = self.backbone(images.tensors)\n',
          'first-line': 515L,
          'folded-linenos': [],
          'sel-line': 538L,
          'sel-line-start': 23653L,
          'selection_end': 23653L,
          'selection_start': 23653L,
          'zoom': 0L},
         1609979043.789264],
        [loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         {'attrib-starts': [('Module|0|',
                             177),
                            ('Module|0|._call_impl|0|',
                             714)],
          'code-line': '            result = self.forward(*input, **kwargs)'\
                       '\n',
          'first-line': 713L,
          'folded-linenos': [],
          'sel-line': 726L,
          'sel-line-start': 29761L,
          'selection_end': 29761L,
          'selection_start': 29761L,
          'zoom': 0L},
         1609979047.006841],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_train|0|',
                             21)],
          'code-line': '    model.train()\n',
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 22L,
          'sel-line-start': 450L,
          'selection_end': 450L,
          'selection_start': 450L,
          'zoom': 0L},
         1609979047.525829],
        [loc('deepforest/main.py'),
         {'attrib-starts': [('deepforest|0|',
                             9),
                            ('deepforest|0|.train|0|',
                             103)],
          'code-line': '        training.run(train_ds=self.ds, model=self.ba'\
                       'ckbone, config=self.config)\n',
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 105L,
          'sel-line-start': 4149L,
          'selection_end': 4149L,
          'selection_start': 4149L,
          'zoom': 0L},
         1609979048.068464],
        [loc('deepforest/training.py'),
         {'attrib-starts': [('train_one_epoch|0|',
                             8)],
          'code-line': '        loss_dict = model(images, targets)\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 945L,
          'selection_end': 945L,
          'selection_start': 945L,
          'zoom': 0L},
         1609979089.830342],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_train|0|',
                             21)],
          'code-line': '    model.train()\n',
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 22L,
          'sel-line-start': 450L,
          'selection_end': 450L,
          'selection_start': 450L,
          'zoom': 0L},
         1609979089.838255],
        [loc('tests/test_main.py'),
         {'attrib-starts': [('test_train|0|',
                             21)],
          'code-line': 'def test_train(model):\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 427L,
          'selection_end': 449L,
          'selection_start': 427L,
          'zoom': 0L},
         1609979133.509106]],
        20),
        'current-loc': loc('deepforest/transforms.py'),
        'editor-state-list': [(loc('deepforest/dataset.py'),
                               {'attrib-starts': [('TreeDataset|0|',
        32),
        ('TreeDataset|0|.__getitem__|0|',
         48)],
                                'code-line': '        targets["labels"] = im'\
        'age_annotations.label.apply(lambda x: idx_to_label[x]).values.astyp'\
        'e(int)\n',
                                'first-line': 8L,
                                'folded-linenos': [],
                                'sel-line': 64L,
                                'sel-line-start': 2105L,
                                'selection_end': 2207L,
                                'selection_start': 2207L,
                                'zoom': 0L}),
                              (loc('deepforest/main.py'),
                               {'attrib-starts': [('deepforest|0|',
        9),
        ('deepforest|0|.train|0|',
         103)],
                                'code-line': '        training.run(train_ds='\
        'self.ds, model=self.backbone, config=self.config)\n',
                                'first-line': 85L,
                                'folded-linenos': [],
                                'sel-line': 105L,
                                'sel-line-start': 4149L,
                                'selection_end': 4149L,
                                'selection_start': 4149L,
                                'zoom': 0L}),
                              (loc('deepforest/model.py'),
                               {'attrib-starts': [],
                                'code-line': 'import torch\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 2L,
                                'sel-line-start': 26L,
                                'selection_end': 26L,
                                'selection_start': 26L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
                               {'attrib-starts': [('Module|0|',
        177),
        ('Module|0|._call_impl|0|',
         714)],
                                'code-line': '            result = self.forw'\
        'ard(*input, **kwargs)\n',
                                'first-line': 713L,
                                'folded-linenos': [],
                                'sel-line': 726L,
                                'sel-line-start': 29761L,
                                'selection_end': 29761L,
                                'selection_start': 29761L,
                                'zoom': 0L}),
                              (loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'),
                               {'attrib-starts': [('RetinaNet|0|',
        243),
        ('RetinaNet|0|.forward|0|',
         483)],
                                'code-line': '        features = self.backbo'\
        'ne(images.tensors)\n',
                                'first-line': 515L,
                                'folded-linenos': [],
                                'sel-line': 538L,
                                'sel-line-start': 23653L,
                                'selection_end': 23653L,
                                'selection_start': 23653L,
                                'zoom': 0L}),
                              (loc('tests/test_dataset.py'),
                               {'attrib-starts': [('test_TreeDataset_transfo'\
        'rm|0|',
        24)],
                                'code-line': '        assert targets["labels'\
        '"].shape == (79,)\n',
                                'first-line': 6L,
                                'folded-linenos': [],
                                'sel-line': 37L,
                                'sel-line-start': 1188L,
                                'selection_end': 1234L,
                                'selection_start': 1234L,
                                'zoom': 0L}),
                              (loc('tests/test_main.py'),
                               {'attrib-starts': [('test_train|0|',
        21)],
                                'code-line': 'def test_train(model):\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 21L,
                                'sel-line-start': 427L,
                                'selection_end': 449L,
                                'selection_start': 427L,
                                'zoom': 0L}),
                              (loc('deepforest/training.py'),
                               {'attrib-starts': [('train_one_epoch|0|',
        8)],
                                'code-line': '        loss_dict = model(imag'\
        'es, targets)\n',
                                'first-line': 20L,
                                'folded-linenos': [],
                                'sel-line': 25L,
                                'sel-line-start': 945L,
                                'selection_end': 945L,
                                'selection_start': 945L,
                                'zoom': 0L}),
                              (loc('deepforest/transforms.py'),
                               {'attrib-starts': [('ToTensor|0|',
        29),
        ('ToTensor|0|.__call__|0|',
         30)],
                                'code-line': '        image = F.to_tensor(im'\
        'age).float()\n',
                                'first-line': 13L,
                                'folded-linenos': [],
                                'sel-line': 31L,
                                'sel-line-start': 904L,
                                'selection_end': 945L,
                                'selection_start': 945L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('deepforest/dataset.py'),
         loc('deepforest/main.py'),
         loc('deepforest/model.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
         loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'),
         loc('tests/test_dataset.py'),
         loc('tests/test_main.py'),
         loc('deepforest/training.py'),
         loc('deepforest/transforms.py')]),
                               'open_files': [u'deepforest/model.py',
        u'deepforest/dataset.py',
        u'tests/test_dataset.py',
        u'deepforest/main.py',
        u'deepforest/training.py',
        u'tests/test_main.py',
        u'deepforest/transforms.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5042016806722689},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1609979092.63032),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1607965912.374172),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1709,
                         1083)}]}
guimgr.recent-documents = [loc('deepforest/transforms.py'),
                           loc('tests/test_main.py'),
                           loc('deepforest/training.py'),
                           loc('deepforest/main.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/nn/modules/module.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/retinanet.py'),
                           loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/backbone_utils.py'),
                           loc('tests/test_dataset.py'),
                           loc('deepforest/dataset.py'),
                           loc('deepforest/model.py')]
guimgr.visual-state = {loc('../../../../Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {'a'\
        'ttrib-starts': [('RunInSingleDir|0|',
                          456)],
        'code-line': '        import pytest\n',
        'first-line': 454L,
        'folded-linenos': [],
        'sel-line': 466L,
        'sel-line-start': 16384L,
        'selection_end': 16405L,
        'selection_start': 16384L,
        'zoom': 0L},
                       loc('azure-pipelines.yml'): {'attrib-starts': [],
        'code-line': '  - script: |\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 799L,
        'selection_end': 812L,
        'selection_start': 812L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_528000_4978000_image_crop2.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_528000_4978000_image_crop2.p'\
                     'ng</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 95L,
        'selection_start': 95L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.tif'): {'a'\
        'ttrib-starts': [],
        'code-line': 'MM\0*\0\r',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/2019_YELL_2_541000_4977000_image_crop.xml'): {'a'\
        'ttrib-starts': [],
        'code-line': '    <filename>2019_YELL_2_541000_4977000_image_crop.pn'\
                     'g</filename>\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 39L,
        'selection_end': 94L,
        'selection_start': 94L,
        'zoom': 0L},
                       loc('deepforest/data/deepforest_config.yml'): {'attri'\
        'b-starts': [],
        'code-line': '### \n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1510L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/data/example.csv'): {'attrib-starts': [],
        'code-line': '2019_YELL_2_541000_4977000_image_crop.png,51,374,97,41'\
                     '6,Tree\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 1173L,
        'selection_end': 1220L,
        'selection_start': 1220L,
        'zoom': 0L},
                       loc('deepforest/dataset.py'): {'attrib-starts': [('Tr'\
        'eeDataset|0|',
        27),
        ('TreeDataset|0|.__getitem__|0|',
         43)],
        'code-line': '        return image, targets   \n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2054L,
        'selection_end': 2086L,
        'selection_start': 2086L,
        'zoom': 0L},
                       loc('deepforest/deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/engine.py'): {'attrib-starts': [],
        'code-line': 'from coco_eval import CocoEvaluator\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 256L,
        'selection_end': 291L,
        'selection_start': 291L,
        'zoom': 0L},
                       loc('deepforest/main.py'): {'attrib-starts': [('deepf'\
        'orest|0|',
        9),
        ('deepforest|0|.train|0|',
         103)],
        'code-line': '        training.run(train_ds=self.ds, model=self.back'\
                     'bone, config=self.config)\n',
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 4119L,
        'selection_end': 4148L,
        'selection_start': 4148L,
        'zoom': 0L},
                       loc('deepforest/model.py'): {'attrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 26L,
        'selection_end': 26L,
        'selection_start': 26L,
        'zoom': 0L},
                       loc('deepforest/retinanet_train.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('deepforest/train.py'): {'attrib-starts': [('trai'\
        'n|0|',
        2)],
        'code-line': '        config: a deepforest config object\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 226L,
        'selection_end': 268L,
        'selection_start': 268L,
        'zoom': 0L},
                       loc('deepforest/training.py'): {'attrib-starts': [],
        'code-line': 'import torch.optim as optim\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 140L,
        'selection_end': 167L,
        'selection_start': 167L,
        'zoom': 0L},
                       loc('deepforest/transforms.py'): {'attrib-starts': [('T'\
        'oTensor|0|',
        44),
        ('ToTensor|0|.__call__|0|',
         45)],
        'code-line': '    def __call__(self, image, target):\n',
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1514L,
        'selection_end': 1552L,
        'selection_start': 1552L,
        'zoom': 0L},
                       loc('deepforest/utilities.py'): {'attrib-starts': [],
        'code-line': 'import warnings\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 138L,
        'selection_end': 153L,
        'selection_start': 153L,
        'zoom': 0L},
                       loc('deepforest_config.yml'): {'attrib-starts': [],
        'code-line': 'workers: 1\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 1293L,
        'selection_end': 1293L,
        'selection_start': 1293L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'code-line': '  - rasterio\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 362L,
        'selection_end': 374L,
        'selection_start': 374L,
        'zoom': 0L},
                       loc('evaluate.py'): {'attrib-starts': [],
        'code-line': 'import torch\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 12L,
        'selection_start': 12L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('deepforest|0|',
        7),
        ('deepforest|0|.__init__|0|',
         10)],
        'code-line': '        # if not use installed.\n',
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 413L,
        'selection_end': 444L,
        'selection_start': 444L,
        'zoom': 0L},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'rasterio\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 117L,
        'selection_end': 125L,
        'selection_start': 125L,
        'zoom': 0L},
                       loc('setup.py'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1229L,
        'selection_end': 1229L,
        'selection_start': 1229L,
        'zoom': 0L},
                       loc('tests/test_data.py'): {'attrib-starts': [],
        'code-line': '# test data locations and existance\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dataset.py'): {'attrib-starts': [('te'\
        'st_TreeDataset|0|',
        7)],
        'code-line': '    assert image.max() <= 1\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 491L,
        'selection_end': 518L,
        'selection_start': 518L,
        'zoom': 0L},
                       loc('tests/test_deepforest.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_environment.py'): {'attrib-starts': [],
        'code-line': '#test environment\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 17L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_keras_retinanet.py'): {'attrib-starts': [],
        'code-line': '# test loading of keras retinanet\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 33L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_main.py'): {'attrib-starts': [('test_'\
        'train|0|',
        20)],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 425L,
        'selection_end': 425L,
        'selection_start': 425L,
        'zoom': 0L},
                       loc('tests/test_model.py'): {'attrib-starts': [('test'\
        '_load_backbone|0|',
        5)],
        'code-line': '',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 230L,
        'selection_end': 230L,
        'selection_start': 230L,
        'zoom': 0L},
                       loc('tests/test_preprocess.py'): {'attrib-starts': [],
        'code-line': 'from PIL import Image\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 97L,
        'selection_end': 118L,
        'selection_start': 118L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_utilities.py'): {'attrib-starts': [('t'\
        'est_xml_to_annotations|0|',
        18)],
        'code-line': '    #release_tag, weights = utilities.use_release()\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 678L,
        'selection_end': 729L,
        'selection_start': 729L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'from deepforest.retinanet_train import main as retinan'\
                     'et_train\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 631L,
        'selection_end': 662L,
        'selection_start': 662L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/conda-forge.yml'): {'att'\
        'rib-starts': [],
        'code-line': 'conda_forge_output_validation: true\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../deepforest-feedstock/recipe/meta.yaml'): {'at'\
        'trib-starts': [],
        'code-line': '    - tensorflow ==1.14.0\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 962L,
        'selection_end': 987L,
        'selection_start': 987L,
        'zoom': 0L},
                       loc('../../Downloads/tv-training-code.py'): {'attrib-'\
        'starts': [],
        'code-line': 'from engine import train_one_epoch, evaluate\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 372L,
        'selection_end': 383L,
        'selection_start': 377L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          495),
                         ('Module|0|._importtestmodule|0|',
                          573)],
        'code-line': '            raise self.CollectError(\n',
        'first-line': 581L,
        'folded-linenos': [],
        'sel-line': 602L,
        'sel-line-start': 22763L,
        'selection_end': 22799L,
        'selection_start': 22763L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          144),
                         ('NDFrame|0|.xs|0|',
                          3603)],
        'code-line': '            loc = index.get_loc(key)\n',
        'first-line': 3714L,
        'folded-linenos': [],
        'sel-line': 3735L,
        'sel-line-start': 125244L,
        'selection_end': 125244L,
        'selection_start': 125244L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_LocationIndexer|0|',
                          596),
                         ('_LocationIndexer|0|.__getitem__|0|',
                          880)],
        'code-line': '            return self._getitem_tuple(key)\n',
        'first-line': 882L,
        'folded-linenos': [],
        'sel-line': 887L,
        'sel-line-start': 27993L,
        'selection_end': 27993L,
        'selection_start': 27993L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/tifffile/tifffile.py'): {'a'\
        'ttrib-starts': [('TiffPage|0|',
                          5228),
                         ('TiffPage|0|.decode|0|',
                          5577),
                         ('TiffPage|0|.decode|0|.decode|1|',
                          5925)],
        'code-line': "                raise ValueError(f'TiffPage {self.inde"\
                     "x}: {exc}')\r\n",
        'first-line': 5612L,
        'folded-linenos': [],
        'sel-line': 5633L,
        'sel-line-start': 217235L,
        'selection_end': 217235L,
        'selection_start': 217235L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py'): {'a'\
        'ttrib-starts': [('default_collate|0|',
                          41)],
        'code-line': '        return {key: default_collate([d[key] for d in '\
                     'batch]) for key in elem}\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 72L,
        'sel-line-start': 2926L,
        'selection_end': 2926L,
        'selection_start': 2926L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py'): {'a'\
        'ttrib-starts': [('_BaseDatasetFetcher|0|',
                          6),
                         ('_BaseDatasetFetcher|0|.fetch|0|',
                          13)],
        'code-line': '        raise NotImplementedError()\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 511L,
        'selection_end': 546L,
        'selection_start': 546L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchsummary/torchsummary.py'): {'a'\
        'ttrib-starts': [('summary|0|',
                          8),
                         ('summary|0|.register_hook|0|',
                          10),
                         ('summary|0|.register_hook|0|.hook|0|',
                          12)],
        'code-line': '            summary[m_key]["input_shape"] = list(input'\
                     '[0].size())\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 482L,
        'selection_end': 482L,
        'selection_start': 482L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/models/detection/transform.py'): {'a'\
        'ttrib-starts': [('GeneralizedRCNNTransform|0|',
                          57),
                         ('GeneralizedRCNNTransform|0|.forward|0|',
                          78)],
        'code-line': '                raise ValueError("images is expected t'\
                     'o be a list of 3d tensors "\n',
        'first-line': 87L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3859L,
        'selection_end': 3859L,
        'selection_start': 3859L,
        'zoom': 0L},
                       loc('../../opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torchvision/transforms/transforms.py'): {'a'\
        'ttrib-starts': [('Resize|0|',
                          231),
                         ('Resize|0|.__init__|0|',
                          249)],
        'code-line': '            raise ValueError("If size is a sequence, i'\
                     't should have 1 or 2 values")\n',
        'first-line': 233L,
        'folded-linenos': [],
        'sel-line': 254L,
        'sel-line-start': 9069L,
        'selection_end': 9152L,
        'selection_start': 9069L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'/Users/benweinstein/Documents/DeepForest-pytorch')}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/bin/python3')}
proj.pypath = {None: ('custom',
                      [])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'get_iou',
                         u'engine',
                         u'get_data',
                         u'_ROOT',
                         u'to save']
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_utilities.py',
                            [('test_float_warning',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              33),
                             ('test_xml_to_annotations',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              18)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_data.py',
                            [('test_get_data',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              7)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_environment.py',
                            [('test_environment',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              3)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                            [('test_main',
                              0,
                              None,
                              None,
                              None,
                              1609975208,
                              17),
                             ('test_train',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo AttributeError('Caught Attrib"\
                               "uteError in DataLoader worker process 0.\\nO"\
                               "riginal Traceback (most recent call last):\\"\
                               "n  ...call__\\n    image = F.to_tensor(image"\
                               ".float())\\nAttributeError: \\'numpy.ndarray"\
                               "\\' object has no attribute \\'float\\'\\n')"\
                               " tblen=9>",
                               "AttributeError: Caught AttributeError in Dat"\
                               "aLoader worker process 0.\nOriginal Tracebac"\
                               "k (most recent call last):\n  File \"/Users/"\
                               "benweinstein/opt/miniconda3/envs/DeepForest_"\
                               "pytorch/lib/python3.8/site-packages/torch/ut"\
                               "ils/data/_utils/worker.py\", line 198, in _w"\
                               "orker_loop\n    data = fetcher.fetch(index)"\
                               "\n  File \"/Users/benweinstein/opt/miniconda"\
                               "3/envs/DeepForest_pytorch/lib/python3.8/site"\
                               "-packages/torch/utils/data/_utils/fetch.py\""\
                               ", line 44, in fetch\n    data = [self.datase"\
                               "t[idx] for idx in possibly_batched_index]\n"\
                               "  File \"/Users/benweinstein/opt/miniconda3/"\
                               "envs/DeepForest_pytorch/lib/python3.8/site-p"\
                               "ackages/torch/utils/data/_utils/fetch.py\", "\
                               "line 44, in <listcomp>\n    data = [self.dat"\
                               "aset[idx] for idx in possibly_batched_index]"\
                               "\n  File \"/Users/benweinstein/Documents/Dee"\
                               "pForest-pytorch/deepforest/dataset.py\", lin"\
                               "e 68, in __getitem__\n    image, targets = s"\
                               "elf.transform(image, targets)\n  File \"/Use"\
                               "rs/benweinstein/Documents/DeepForest-pytorch"\
                               "/deepforest/transforms.py\", line 12, in __c"\
                               "all__\n    image, target = t(image, target)"\
                               "\n  File \"/Users/benweinstein/Documents/Dee"\
                               "pForest-pytorch/deepforest/transforms.py\", "\
                               "line 32, in __call__\n    image = F.to_tenso"\
                               "r(image.float())\nAttributeError: 'numpy.nda"\
                               "rray' object has no attribute 'float'",
                               [(u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/tests/test_main.py',
                                 23,
                                 'test_train',
                                 None,
                                 '    model.train()'),
                                (u'/Users/benweinstein/Documents/DeepForest-pytorch/deepforest/main.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/deepforest/main.py',
                                 106,
                                 'train',
                                 None,
                                 '        training.run(train_ds=self.ds, mod'\
                                 'el=self.backbone, config=self.config)'),
                                (u'/Users/benweinstein/Documents/DeepForest-pytorch/deepforest/training.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/deepforest/training.py',
                                 80,
                                 'run',
                                 None,
                                 '        train_one_epoch(model, optimizer, '\
                                 'data_loader_train, device, epoch, print_fr'\
                                 'eq=config["print_freq"])'),
                                (u'/Users/benweinstein/Documents/DeepForest-pytorch/deepforest/training.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/deepforest/training.py',
                                 22,
                                 'train_one_epoch',
                                 None,
                                 '    for images, targets in metric_logger.l'\
                                 'og_every(data_loader, print_freq, header):'),
                                (u'/Users/benweinstein/Documents/DeepForest-pytorch/deepforest/training_utils.py',
                                 '/Users/benweinstein/Documents/DeepForest-p'\
                                 'ytorch/deepforest/training_utils.py',
                                 209,
                                 'log_every',
                                 None,
                                 '        for obj in iterable:'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 435,
                                 '__next__',
                                 None,
                                 '        data = self._next_data()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 1085,
                                 '_next_data',
                                 None,
                                 '                return self._process_data('\
                                 'data)'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/utils/data/dataloader.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/utils/data/dataloader.py',
                                 1111,
                                 '_process_data',
                                 None,
                                 '            data.reraise()'),
                                (u'/Users/benweinstein/opt/miniconda3/envs/DeepForest_pytorch/lib/python3.8/site-packages/torch/_utils.py',
                                 '/Users/benweinstein/opt/miniconda3/envs/De'\
                                 'epForest_pytorch/lib/python3.8/site-packag'\
                                 'es/torch/_utils.py',
                                 428,
                                 'reraise',
                                 None,
                                 '        raise self.exc_type(msg)')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1609979140,
                              21)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_dataset.py',
                            [('test_TreeDataset_transform[False]',
                              0,
                              None,
                              None,
                              None,
                              1609978889,
                              23),
                             ('test_TreeDataset',
                              0,
                              None,
                              None,
                              None,
                              1609978889,
                              7),
                             ('test_TreeDataset_transform[True]',
                              0,
                              None,
                              None,
                              None,
                              1609978889,
                              23)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_preprocess.py',
                            [('test_select_annotations_tile',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              59),
                             ('test_compute_windows',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              38),
                             ('test_split_raster',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              75),
                             ('test_split_raster_empty',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              86),
                             ('test_select_annotations',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              44),
                             ('test_split_size_error',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              126)]),
                           (u'/Users/benweinstein/Documents/DeepForest-pytorch/tests/test_model.py',
                            [('test_load_backbone',
                              0,
                              None,
                              None,
                              None,
                              1609960817,
                              5)])],
                          {u'/Users/benweinstein/Documents/DeepForest/tests/test_deepforest.py': (u'Test process aborted: some tests were not run',
        1607966490)})
